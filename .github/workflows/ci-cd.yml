# GitHub Actions workflow para CI/CD do DebugAI
# Este workflow instala dependências, executa testes e faz build do Docker
# Além disso, provisiona e destrói recursos na AWS com Terraform

name: CI/CD DebugAI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes (adicione seus testes aqui)
        run: |
          echo "Nenhum teste definido ainda. Adicione testes em test_*.py."

      - name: Build Docker image
        run: |
          docker build -t debugai .

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Init Terraform
        run: terraform -chdir=terraform init

      - name: Destroy Terraform (limpeza antes de criar)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform -chdir=terraform destroy -auto-approve || true

      - name: Apply Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform -chdir=terraform apply -auto-approve
